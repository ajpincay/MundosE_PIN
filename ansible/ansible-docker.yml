- hosts: awsec2
  become: yes
  vars:
  tasks:

    - name: Update apt-get repo and cache
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600  
  
    - name: Install related Ubuntu packages
      apt:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
          - python3
          - python3-pip
          - mc    

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install python packages
      pip:
        name: docker

    - name: Create a Comprobantes network
      docker_network:
        name: mundose_network        
    
    - name: Run Portainer
      community.docker.docker_container:
        name: portainer
        image:  portainer/portainer
        state: started
        restart_policy: always
        env:
          TZ: America/Bogota
        ports:
          - "8000:8000"
          - "9000:9000"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - portainer_data:/data portainer/portainer
        networks:
          - name: mundose_network

    - name: Run PostgresSQL
      community.docker.docker_container:
        name: postgresql
        image:  bitnami/postgresql:latest
        state: started
        restart_policy: always
        env:
          TZ: America/Bogota
          ALLOW_EMPTY_PASSWORD: 'yes'
          POSTGRESQL_USERNAME: bn_sonarqube
          POSTGRESQL_PASSWORD: bitnami
          POSTGRESQL_DATABASE: bitnami_sonarqube
        ports:
          - "5432:5432"
        volumes:
          - postgresql_data:/bitnami/postgresql
        networks:
          - name: mundose_network

    - name: Run SonarQube
      community.docker.docker_container:
        name: sonarqube
        image:  bitnami/sonarqube:latest
        state: started
        restart_policy: always
        env:
          TZ: America/Bogota
          SONARQUBE_DATABASE_HOST: postgresql          
          SONARQUBE_DATABASE_USER: bn_sonarqube
          SONARQUBE_DATABASE_PASSWORD: bitnami
          SONARQUBE_DATABASE_NAME: bitnami_sonarqube
        ports:
          - "8080:8080"
          - "8443:8443"          
        volumes:
          - sonarqube_data:/bitnami/sonarqube
        networks:
          - name: mundose_network

    # - name: Run Prometheus
    #   community.docker.docker_container:
    #     name: sonarqube
    #     image:  bitnami/sonarqube:latest
    #     state: started
    #     restart_policy: always
    #     env:
    #       TZ: America/Bogota
    #       ALLOW_EMPTY_PASSWORD: 'yes'
    #       POSTGRESQL_USERNAME: bn_sonarqube
    #       POSTGRESQL_PASSWORD: bitnami
    #       POSTGRESQL_DATABASE: bitnami_sonarqube
    #     ports:
    #       - "8080:8080"
    #       - "8443:8443"          
    #     volumes:
    #       - sonarqube_data:/bitnami/sonarqube
    #     networks:
    #       - name: mundose_network    